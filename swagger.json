{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.1",
    "title": "Kapu$ta docs",
    "description": "Kapu$ta backend documentation",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:3000" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    },
    {
      "name": "Categories",
      "description": "Categories endpoints"
    },
    {
      "name": "Report",
      "description": "Report endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Missing required field",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authorization",
        "parameters": [],
        "requestBody": {
          "description": "Authorization's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation, created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (Email or password is wrong)",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful"
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "security": [{ "Bearer": [] }],
        "parameters": [],

        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/balance": {
      "put": {
        "tags": ["Auth"],
        "summary": "Update balance",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "User's balance",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Not correct value",
            "content": {}
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "All categories list",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Categories"],
        "summary": "Add categories ",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Categories object addition",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCategoriesRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCategoriesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/report": {
      "get": {
        "tags": ["Report"],
        "summary": "Report of the year by months ",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "i",
            "in": "query",
            "description": "Use *i* for income and *o* for outcome",
            "schema": {
              "type": "integer",
              "minimum": 4,
              "default": 2021,
              "description": "year",
              "required": "true"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/api/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "User transactions",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Transactions's object additinal, type true- incomes, type false - outcomes",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation, created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (Email or password is wrong)",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/{transactionId}": {
      "put": {
        "tags": ["Transactions"],
        "summary": "User transaction's updating",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "The id of transaction",
            "example": "618c21bda3001f722c032900"
          }
        ],
        "requestBody": {
          "description": "Transactions's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsIdRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (Email or password is wrong)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Transactions"],
        "summary": "User transaction's delete",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "The id of transaction",
            "example": "618c21bda3001f722c032900"
          }
        ],

        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TAIdDeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Email or password is wrong)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@test.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123t456e789st"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User's name",
            "format": "name",
            "example": "User"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123t456e789st"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "format": "jwt",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfNOyDMrBtPvK3dExr09Yta563k"
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "format": "number",
            "example": "12456"
          },
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "987654321test"
          },
          "avatar": {
            "type": "picture",
            "description": "User's avatar",
            "format": "link"
          }
        },
        "example": {
          "username": "User",
          "email": "user@test.com",
          "password": "123t456e789st",
          "token": null,
          "balance": null,
          "_id": "987654321test",
          "avatar": "https://s.gravatar.com/avatar/a6bee223811a3a269b8e3336a2a87cb2?s=250"
        }
      },
      "AuthorizationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@test.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123t456e789st"
          }
        }
      },
      "AuthorizationResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "987654321test"
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "format": "name",
            "example": "User"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123t456e789st"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "format": "jwt",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfNOyDMrBtPvK3dExr09Yta563k"
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "format": "number",
            "example": "12456"
          },
          "avatar": {
            "type": "picture",
            "description": "User's avatar",
            "format": "link"
          }
        },
        "example": {
          "_id": "987654321test",
          "username": "User",
          "email": "user@test.com",
          "password": "123t456e789st",
          "token": "yJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfNOyDMrBtPvK3dExr09Yta563k",
          "balance": null,
          "avatar": "https://s.gravatar.com/avatar/a6bee223811a3a269b8e3336a2a87cb2?s=250"
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "987654321test"
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "format": "name",
            "example": "User"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123t456e789st"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "format": "jwt",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfNOyDMrBtPvK3dExr09Yta563k"
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "format": "number",
            "example": "12456"
          },
          "avatar": {
            "type": "picture",
            "description": "User's avatar",
            "format": "link"
          }
        },
        "example": {
          "_id": "987654321test",
          "username": "User",
          "email": "user@test.com",
          "password": "123t456e789st",
          "token": "yJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfNOyDMrBtPvK3dExr09Yta563k",
          "balance": null,
          "avatar": "https://s.gravatar.com/avatar/a6bee223811a3a269b8e3336a2a87cb2?s=250"
        }
      },
      "BalanceRequest": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 45789
          }
        },
        "example": {
          "balance": 45789
        }
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 45789
          }
        },
        "example": {
          "balance": 45789
        }
      },
      "CategoriesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Categories id",
              "example": "987654321test"
            },
            "name": {
              "type": "string",
              "description": "Categories name",
              "format": "name",
              "examle": "продукты"
            }
          }
        },
        "example": [
          {
            "_id": "987654321test",
            "name": "Продукты",
            "createdAt": "2021-11-06T22:49:30.418Z",
            "updatedAt": "2021-11-06T22:49:30.418Z"
          },
          {
            "_id": "618707084d99133d9513cfeb",
            "name": "Алкоголь",
            "createdAt": "2021-11-06T22:51:52.332Z",
            "updatedAt": "2021-11-06T22:51:52.332Z"
          },
          {
            "_id": "618707614d99133d9513cffd",
            "name": "Все для дома",
            "createdAt": "2021-11-06T22:53:21.967Z",
            "updatedAt": "2021-11-06T22:53:21.967Z"
          }
        ]
      },
      "AddCategoriesRequest": {
        "type": "object",
        "required": "name",
        "properties": {
          "name": {
            "type": "string",
            "description": "Categories name",
            "example": "Дань"
          }
        },
        "example": {
          "name": "Дань"
        }
      },
      "AddCategoriesResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Categories name",
            "format": "name",
            "example": "User"
          },
          "_id": {
            "type": "string",
            "description": "Categories id",
            "example": "987654321test"
          }
        },
        "example": {
          "name": "дань",
          "_id": "618ac4d6afd884baa98ac1d9"
        }
      },
      "ReportResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "sums": {
              "type": "array",
              "description": "Balance by month"
            }
          }
        },
        "example": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      },
      "TransactionsRequest": {
        "type": "object",
        "required": "name",
        "properties": {
          "amount": {
            "type": "number",
            "description": "transaction's amount",
            "format": "number",
            "example": "45623"
          },
          "description": {
            "type": "string",
            "description": "description operation",
            "example": "haus"
          },
          "date": {
            "type": "string",
            "description": "transaction's date",
            "example": "2021-11-10T00:00:00.000Z"
          },
          "type": {
            "type": "string",
            "description": "transaction's type",
            "example": "true"
          }
        },
        "example": {
          "amount": 45623,
          "description": "haus",
          "date": "2021-11-10",
          "type": true
        }
      },
      "TransactionsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "transaction's type",
            "example": "true"
          },
          "date": {
            "type": "string",
            "description": "transaction's date",
            "example": "2021-11-10T00:00:00.000Z"
          },
          "amount": {
            "type": "number",
            "description": "transaction's amount",
            "format": "number",
            "example": "45623"
          },
          "description": {
            "type": "string",
            "description": "description operation",
            "example": "haus"
          },
          "owner": {
            "type": "picture",
            "description": "User-owner transaction",
            "exapmle": "61example001f722c0328f4"
          },
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "987654321test"
          }
        },
        "example": {
          "type": true,
          "date": "2021-11-10T00:00:00.000Z",
          "amount": 45623,
          "description": "haus",
          "owner": "61example001f722c0328f4",
          "_id": "618c21bda3example22c032900"
        }
      },
      "TransactionsIdRequest": {
        "type": "object",
        "required": "name",
        "properties": {
          "amount": {
            "type": "number",
            "description": "transaction's amount",
            "format": "number",
            "example": "45623"
          },
          "description": {
            "type": "string",
            "description": "description operation",
            "example": "haus"
          },
          "date": {
            "type": "string",
            "description": "transaction's date",
            "example": "2021-11-10T00:00:00.000Z"
          },
          "type": {
            "type": "string",
            "description": "transaction's type",
            "example": "true"
          }
        },
        "example": {
          "amount": 45623,
          "description": "haus",
          "date": "2021-11-10",
          "type": true
        }
      },
      "TransactionsIdResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "transaction's type",
            "example": "true"
          },
          "date": {
            "type": "string",
            "description": "transaction's date",
            "example": "2021-11-10T00:00:00.000Z"
          },
          "amount": {
            "type": "number",
            "description": "transaction's amount",
            "format": "number",
            "example": "45623"
          },
          "description": {
            "type": "string",
            "description": "description operation",
            "example": "haus"
          },
          "owner": {
            "type": "string",
            "description": "User-owner transaction",
            "exapmle": "61example001f722c0328f4"
          },
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "987654321test"
          }
        },
        "example": {
          "type": true,
          "date": "2021-11-10T00:00:00.000Z",
          "amount": 45623,
          "description": "haus",
          "owner": "61example001f722c0328f4",
          "_id": "618c21bda3example22c032900"
        }
      },
      "TAIdDeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Answer on delete"
          }
        },
        "example": {
          "message": "Success delete"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
